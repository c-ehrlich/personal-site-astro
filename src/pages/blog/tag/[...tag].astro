---
import { CollectionEntry, getCollection } from "astro:content";
import PostList from "../../../components/blog/PostList.astro";
import IndexLayout from "../../../layouts/index-layout.astro";
import {
  BlogTagWithCount,
  createBlogTagListWithCount,
} from "../../../util/blogTags";

export async function getStaticPaths() {
  const tagsWithCount = await createBlogTagListWithCount();
  const posts = await getCollection("blog");
  return tagsWithCount.map((tagWithCount) => ({
    params: {
      tag: tagWithCount.tag,
    },
    props: {
      tagWithCount,
      posts: posts
        .filter((post) => post.data.tags.includes(tagWithCount.tag))
        .sort(
          (a, b) =>
            new Date(b.data.published).getTime() -
            new Date(a.data.published).getTime(),
        ),
    },
  }));
}

interface Props {
  tagWithCount: BlogTagWithCount;
  posts: Array<CollectionEntry<"blog">>;
}

const { tagWithCount, posts } = Astro.props;
---

<IndexLayout title={tagWithCount.tag}>
  <h2 class="text-4xl">{tagWithCount.tag}</h2>
  <p>{tagWithCount.count} {tagWithCount.count === 1 ? "post" : "posts"}</p>
  <PostList posts={posts} />
</IndexLayout>
